exports[`Dialog [common] example testing should match snapshot for 1.small 1`] = `
<div>
  <Button
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Toggle
  </Button>
  <Dialog
    Header="Header"
    isShown={false}
    size="small">
    <div>
      For better UX, we recommend NOT handling onEscape and onBackgroundClick when isModal is true. The term \"modal\" implies that the user needs to interact with one of the buttons in the footer to exit the dialog.
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <Dialog.Footer>
      <Button
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="link"
        onClick={[Function]}
        type="button">
        Cancel
      </Button>
      <Button
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="primary"
        onClick={[Function]}
        type="button">
        Save
      </Button>
    </Dialog.Footer>
  </Dialog>
</div>
`;

exports[`Dialog [common] example testing should match snapshot for 2.medium 1`] = `
<div>
  <Button
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Toggle
  </Button>
  <Dialog
    Header="Header"
    isShown={false}
    size="medium">
    <div>
      For better UX, we recommend NOT handling onEscape and onBackgroundClick when isModal is true. The term \"modal\" implies that the user needs to interact with one of the buttons in the footer to exit the dialog.
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <Dialog.Footer>
      <Button
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="link"
        onClick={[Function]}
        type="button">
        Cancel
      </Button>
      <Button
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="primary"
        onClick={[Function]}
        type="button">
        Save
      </Button>
    </Dialog.Footer>
  </Dialog>
</div>
`;

exports[`Dialog [common] example testing should match snapshot for 3.large-with-rich-header 1`] = `
<div>
  <Button
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Toggle
  </Button>
  <Dialog
    isShown={false}
    size="large">
    <Dialog.Header>
      <i>
        Rich Header
      </i>
    </Dialog.Header>
    <div>
      For better UX, we recommend NOT handling onEscape and onBackgroundClick when isModal is true. The term \"modal\" implies that the user needs to interact with one of the buttons in the footer to exit the dialog.
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <div>
      Body
    </div>
    <Dialog.Footer>
      <Button
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="link"
        onClick={[Function]}
        type="button">
        Cancel
      </Button>
      <Button
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="primary"
        onClick={[Function]}
        type="button">
        Save
      </Button>
    </Dialog.Footer>
  </Dialog>
</div>
`;

exports[`Dialog [common] example testing should match snapshot for 4.no-modal 1`] = `
<div>
  <Button
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Toggle
  </Button>
  <Dialog
    Header="Header"
    isModal={false}
    isShown={false}
    onBackgroundClick={[Function]}
    onEscape={[Function]}
    size="small">
    In most cases, you\'ll probably just use an isModal Dialog, but this example shows that the Dialog doesn\'t have to be a modal. Try pressing \"escape\" to close this Dialog.
    <Dialog.Footer>
      <Button
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="link"
        onClick={[Function]}
        type="button">
        Cancel
      </Button>
      <Button
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="primary"
        onClick={[Function]}
        type="button">
        Save
      </Button>
    </Dialog.Footer>
  </Dialog>
</div>
`;
