@import '../../styles/mixins';
@import '../../styles/variables';

@List: lucid-List;
@ListLevels: 3;

@List-size-border: 4px;
@List-size-iconButton: 20px;
@List-size-icon: 12px;

@ListChild-size-spacer: 6px;
@ListChild-size-padding: 15px;



// Resets
ul.lucid-List { list-style: none; }

/*
	Primary Component - List
  Should create a default flexible list capable of
  containing an infinate number of nested items.
*/
.lucid-List {
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: stretch;
	width: 100%;
	padding: 0;

	// Style an entire List (or sublist) or a List Item with disabled styling when
	// 'isDisabled' is true
	&-is-disabled,
	&-Item-is-disabled {
		.lucid-List-Item-content {
			color: @color-mediumGray;
			cursor: not-allowed;

			&:hover,
			&:active,
			&:focus {
				background: transparent;
				color: @color-mediumGray;
			}
		}
	}

	// ToDo: style version with a the x-axis set as primary
	&-is-alignedOnX { flex-direction: row; }
}

/*
 * Child Component - ListItem
*/
.lucid-List-Item {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	transition: max-height 500ms cubic-bezier(0.755, 0.050, 0.855, 0.060); /* easeInQuint */
	max-height: 9999px;

	&-is-collapsed {
		//display: block;
		transition: max-height 300ms cubic-bezier(0.230, 1.000, 0.320, 1.000); /* easeOutQuint */
		max-height: 30px;
		overflow: hidden;
	}

	&-is-selected {
		> .lucid-List-Item-content {
			.hardstop-gradient(to right, @featured-color-primary, @featured-color-primary-gradientStartColor, @List-size-border);
			color: @color-darkGray;
		}
	}

	// All List Items who have nested Lists
	&-is-parent {
		.lucid-List-Item-content {
			font-weight: normal;
			border-color: transparent;

			&:before {
				content: '-';
				display: inline-block;
				width: @ListChild-size-spacer;
				color: @color-gray;
				margin: 0 @ListChild-size-spacer 0 0;
			}

			&:hover {
				&:before {
					color: @color-darkGray;
				}
			}
		}

		> .lucid-List-Item-content { border-bottom-color: transparent; }

		.lucid-List-Item-sublist {
			margin: 0;
			padding: 0;
		}
	}

	&:first-of-type > &-content { border-top-color: transparent; }
}

/*
 * Item Content (first level)
*/
.lucid-List-Item-content {
	.is-selectable();
	display: flex;
	font-size: 12px;
	justify-content: flex-start;
	align-items: center;
	font-weight: bold;
	border-width: 1px 0 0 0;
	border-color: @color-gray;
	border-style: solid;
	color: @color-primary;
	padding: 10px 0 8px @ListChild-size-padding;
	line-height: 11px;

	&:hover {
		.hardstop-gradient(to right, @featured-color-primary, @featured-color-default-gradientEndColor, @List-size-border);
		color: @color-darkGray;
	}

	&:focus,
	&:active {
		.hardstop-gradient(to right, @featured-color-primary, @featured-color-primary-gradientStartColor, @List-size-border);
		color: @color-darkGray;
	}
}

/* Expander Button - Added to the DOM with React when hasExpander = true */
.lucid-List-has-expander .lucid-List-Item-content{
	position: relative;
	padding-right: 24px;

	.lucid-List-expander{
		position: absolute;
		right: 5px;
		top: 5px;
		display: flex;
		justify-content: center;
		align-items: center;
		width: @List-size-iconButton;
		height: @List-size-iconButton;
		font-size: @List-size-icon;
		background: transparent;
		border-color: transparent;
		padding: 0;
		line-height: 1em;

		>.lucid-Button-content{
			display: block;
			width: 100%;
			height: 100%;
		}

		// Remove the unnecessary animated background button gradient from the DOM
		&:active, &:focus {
			&:before{display: none;}
		}

		.lucid-CaretIcon {
			width: @List-size-icon;
			height: @List-size-icon;
			color: @color-gray;
		}
	}

	&:hover {
		.lucid-List-expander {
			border: 1px solid @featured-color-default-borderColor;
		}
	}
	&:focus,
	&:active {
		.lucid-List-expander {
			background: transparent;
			border: 1px solid transparent;

			.lucid-CaretIcon {
				color: @color-primary;
			}
		}
	}
}

/*
 * Nested Padding
*/
.lucid-List{
	margin: 0;
	padding: 0;

	.lucid-List-Item-content {
		padding: 10px 0 8px 15px;
	}

	.lucid-List-Item-sublist .lucid-List-Item-content{
		padding: 10px 0 8px @ListChild-size-padding + (12);
	}
	.lucid-List-Item-sublist .lucid-List-Item-sublist .lucid-List-Item-content{
		padding: 10px 0 8px @ListChild-size-padding + (12*2);
	}
	.lucid-List-Item-sublist .lucid-List-Item-sublist .lucid-List-Item-sublist .lucid-List-Item-content{
		padding: 10px 0 8px @ListChild-size-padding + (12*3);
	}
}
