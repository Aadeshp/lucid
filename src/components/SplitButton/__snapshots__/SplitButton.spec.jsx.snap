exports[`SplitButton [common] example testing should match snapshot(s) for 01.default 1`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "marginRight": "20px",
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        onClick={[Function]}
        type="button">
        Primary
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    One
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Two
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 01.default 2`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "marginRight": "20px",
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="primary"
        onClick={[Function]}
        type="button">
        Primary
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        kind="primary"
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    One
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Two
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 01.default 3`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "marginRight": "20px",
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="link"
        onClick={[Function]}
        type="button">
        Link
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        kind="link"
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    One
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Two
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 01.default 4`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "marginRight": "20px",
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="success"
        onClick={[Function]}
        type="button">
        Success
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        kind="success"
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    One
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Two
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 01.default 5`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "marginRight": "20px",
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="warning"
        onClick={[Function]}
        type="button">
        Warning
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        kind="warning"
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    One
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Two
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 01.default 6`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "marginRight": "20px",
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="danger"
        onClick={[Function]}
        type="button">
        Danger
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        kind="danger"
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    One
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Two
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 01.default 7`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "marginRight": "20px",
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="info"
        onClick={[Function]}
        type="button">
        Info
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        kind="info"
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    One
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Two
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 02.success 1`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "height": 100,
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="success"
        onClick={[Function]}
        type="button">
        Save
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        kind="success"
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Action 01
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Here\'s Another Action
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    And Another Action
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 03.disabled 1`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="down"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "height": 100,
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={true}
        onClick={[Function]}
        type="button">
        Save
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="down"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={true}
    onClick={[Function]}
    type="button">
    This action should be disabled
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    This one should be enabled
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={true}
    onClick={[Function]}
    type="button">
    This should be disabled, too
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton [common] example testing should match snapshot(s) for 04.up 1`] = `
<DropMenu
  className="lucid-SplitButton"
  direction="up"
  flyOutStyle={
    Object {
      "maxHeight": "18em",
    }
  }
  focusedIndex={null}
  isDisabled={false}
  isExpanded={false}
  onCollapse={[Function]}
  onExpand={[Function]}
  onFocusNext={[Function]}
  onFocusOption={[Function]}
  onFocusPrev={[Function]}
  onSelect={[Function]}
  selectedIndices={Array []}
  style={
    Object {
      "height": 100,
    }
  }>
  <DropMenu.Control>
    <ButtonGroup
      className={null}
      onSelect={[Function]}
      selectedIndices={Array []}>
      <Button
        className="lucid-SplitButton-Primary-Button"
        hasOnlyIcon={false}
        isActive={false}
        isDisabled={false}
        kind="success"
        onClick={[Function]}
        type="button">
        Save
      </Button>
      <Button
        className="lucid-SplitButton-Drop-Button"
        hasOnlyIcon={true}
        isActive={false}
        isDisabled={false}
        kind="success"
        onClick={[Function]}
        type="button">
        <CaretIcon
          className="lucid-SplitButton-CaretIcon"
          direction="up"
          size={8}
          viewBox="0 3 16 8" />
      </Button>
    </ButtonGroup>
  </DropMenu.Control>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Action 01
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    Here\'s Another Action
  </DropMenu.Option>
  <DropMenu.Option
    hasOnlyIcon={false}
    isActive={false}
    isDisabled={false}
    onClick={[Function]}
    type="button">
    And Another Action
  </DropMenu.Option>
</DropMenu>
`;

exports[`SplitButton click handlers primary button should trigger \`handleClick\` 1`] = `
Object {
  "event": Object {
    "stopPropagation": [Function],
  },
  "props": Object {
    "hasOnlyIcon": false,
    "isActive": false,
    "isDisabled": false,
    "onClick": [Function],
    "type": "button",
  },
}
`;

exports[`SplitButton click handlers secondary buttons should call the click handler for the second button when it is selected 1`] = `
Object {
  "event": Object {},
  "props": Object {
    "hasOnlyIcon": false,
    "isActive": false,
    "isDisabled": false,
    "onClick": [Function],
    "type": "button",
  },
}
`;

exports[`SplitButton click handlers secondary buttons should call the click handler for the third button when it is selected 1`] = `
Object {
  "event": Object {},
  "props": Object {
    "hasOnlyIcon": false,
    "isActive": false,
    "isDisabled": false,
    "onClick": [Function],
    "type": "button",
  },
}
`;
